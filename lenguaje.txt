Sintaxis del lenguaje

Comm ::= Comm Comm 
       | forward Value | fd Value
       | back Value | bk Value
       | right Value | rt Value
       | left Value | lt Value
       | clearscreen | cs
       | clean
       | penup | pu
       | pendown | pd
       | hideturtle | ht
       | showturtle | st
       | home
       | setx Value | sety Value | setxy Value Value
       | setheading Value | seth Value
       | repeat Value [Comm]
       | print Value
       | print Bool
       | setcolor Value
       | for [str i f s] [Comm]
       | if Bool [Comm] [Comm]
       | to String Args [Comm] end
       | make String Value
       | wait Value
       | do.while [Comm] Bool
       -- | fill
       -- | filled Exp [Comm] Muy dificiles de implementar

----No estoy haciendo listas----
List ::= []
       | :var
       | 
       -- | butfirst List
       -- | butlast List

Value ::= Float
        | xcor | ycor
        | heading
        | towards Value Value
        | :var
        | Value + Value
        | Value - Value
        | Value * Value
        | Value / Value
        | readword -- Siempre lee un nÃºmero
        | if Bool Value Value
        | ( Value )
        -- | first List
        -- | last List
        -- | item Exp List
        -- | pick List


Bool ::= Value > Value
       | Value < Value
       | Value = Value
       | Value <= Value
       | Value >= Value
       | Value != Value
       | Bool && Bool
       | Bool || Bool
       | not Bool
       | true
       | false
       | ( Bool )
       -- | empty? List