#### Int puede ser caulquier expresion entera variable

forward fd Int
back bk Int
right rt Int
left lt Int
clearscreen cs
penup
pendown
hideturtle
showturtle
home (dibuja el camino al 0,0)
setx Int
sety Int (ambos dibujan hasta la pos)
setxy Int Int
seth Int (ángulo absoluto)
-------------- cosas difíciles
arc ANGULO RADIO (arco de angulo con radio distancia de la tortuga)
csh Int/String (implementar cambio de formas, mucho esfuerzo)
---------------------------- fin dificil
repeat Int [comm]
print ?????
------pos (devuelve x y)
------heading (devuelve angulo absoluto)  
------towards list XCOR YCOR (devuelve el ángulo apra llegar a (XCOR,YCOR)
---------------------cosas de texto dificiles
label String (escribe el string, tengo que preprogramar texto)
setlabelheight Int (alto de la fuente)
setwidth Int [ancho del lapiz]
------------- fin dificil
to palabra comm end (si se repite reemplaza)
to palabra :arg ... :arg comm (llamar arg con :arg) end
setcolor Int
------random Int (0, Int-1)
make String Val
------:String (recupera variable)
------sum Val Val
------difference Val Val
for [var init <=val delta] [comm] (delta puede ser +1 implicito)
if bool [eltrue] lo false
(lista elem1 ... elemn)
first lista -> lista[0]
last lista -> lista [n-1]
item M lista -> lista[M-1]
pick lista -> elige uno al azar
butfirst lista -> Tail Haskell (abreviado bf)
butlast lista -> todo menos el ultimo (abreviado bl)
fill -> rellena la figura con el color actual del lápiz
filled COLOR [comm] -> hace fill después de dibujar, si quedan espacios abiertos lo "cierra"
wait TIEMPOMS
readword -> pide leer de consola
do.while [comm] boolcond
notequalp ???? se lo pasaron de largo
include ID -> importa programas, ID nombre
clean -> limpia panalla pero no devuelve a 0,0


Comandos para testear lindos
  cs repeat 36 [ rt 10 repeat 8 [ fd 50 lt 45]] 
  repeat 20 [ fd 80 bk 80 rt 18]
  to dashline repeat 5 [setwidth 1 fd 10 setwidth 3 fd 10] end
  to windo :size :color filled :color [repeat 4 [fd :size rt 90]] end 
  to wheel :radius :color arc 360 :radius setcolor :color fill end 
  to car cs pu setxy 130 -50 pd rt 90 fd 70 lt 90 fd 70 lt 90 fd 70 rt 90 fd 100 lt 90 fd 300 lt 90 fd 100 rt 90 fd 70 lt 90 fd 70 lt 90 fd 40 pu fd 30 pd wheel 30 "black fd 240 pu fd 30 pd wheel 30 "black pu setxy 30 80 pd windo 50 "yellow setcolor "black pu setx -100 pd windo 50 "yellow setcolor "black ht end 


Valores:
pos (devuelve x y)
heading (devuelve angulo absoluto)
towards list XCOR YCOR (devuelve el ángulo necesario para llegar a (XCOR,YCOR))
random Int [0, Int-1]
:String (recupera variable)
sum Val Val
difference Val Val